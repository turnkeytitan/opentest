import { useState, useEffect } from "react";
import "./App.css";
import Note from "../src/components/note";
import NotesService from "./services/notes.service";
import INote from "./interfaces/note.interface";

function App() {
  const [notes, setNotes] = useState<INote[]>([]);
  const [newNote, setNewNote] = useState("");
  const [showAll, setShowAll] = useState(true);
  const hook = () => {
    getNotes();
  };
  useEffect(hook, []);

  const getNotes = () => {
    NotesService.getNotes()
      .then(({ data }) => {
        setNotes(data);
      })
      .catch(console.error);
  };
  const addNote = (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    const noteObject = {
      content: newNote,
      important: Math.random() < 0.5,
    };
    NotesService.setNote(noteObject)
      .then(({ data }) => {
        setNotes(notes.concat(data));
      })
      .catch(console.error);
    setNewNote("");
  };
  const handleNoteChange = (event: React.FormEvent<HTMLInputElement>) => {
    setNewNote(event.currentTarget.value);
  };
  const deleteNote = (id: number) => {
    NotesService.deleteNote(id).then(() => {
      getNotes();
    });
  };

  const notesToShow = showAll ? notes : notes.filter((note) => note.important === true);
  return (
    <>
      <div>
        <h1>Notes</h1>
        <div>
          <button onClick={() => setShowAll(!showAll)}>
            show {showAll ? "important" : "all"}
          </button>
        </div>
        <ul>
          {notesToShow.map((note) => (
            <Note
              key={note.id}
              note={note}
              deleteNote={deleteNote}
            />
          ))}
        </ul>
        <form onSubmit={addNote}>
          <input
            value={newNote}
            onChange={handleNoteChange}
          />
          <button type="submit">save</button>
        </form>
      </div>
    </>
  );
}

export default App;
